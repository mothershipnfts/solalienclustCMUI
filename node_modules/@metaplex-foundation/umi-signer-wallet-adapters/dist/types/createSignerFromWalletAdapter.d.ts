import type { Signer } from '@metaplex-foundation/umi';
import { PublicKey as Web3JsPublicKey, Transaction as Web3JsTransaction, VersionedTransaction as Web3JsVersionedTransaction } from '@solana/web3.js';
type Web3JsTransactionOrVersionedTransaction = Web3JsTransaction | Web3JsVersionedTransaction;
export type WalletAdapter = {
    publicKey: Web3JsPublicKey | null;
    signMessage?: (message: Uint8Array) => Promise<Uint8Array>;
    signTransaction?: <T extends Web3JsTransactionOrVersionedTransaction>(transaction: T) => Promise<T>;
    signAllTransactions?: <T extends Web3JsTransactionOrVersionedTransaction>(transactions: T[]) => Promise<T[]>;
};
export declare const createSignerFromWalletAdapter: (walletAdapter: WalletAdapter) => Signer;
export {};
