'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var umiWeb3jsAdapters = require('@metaplex-foundation/umi-web3js-adapters');
var errors = require('./errors.cjs');

const createSignerFromWalletAdapter = walletAdapter => ({
  get publicKey() {
    if (!walletAdapter.publicKey) {
      throw new errors.UninitializedWalletAdapterError();
    }
    return umiWeb3jsAdapters.fromWeb3JsPublicKey(walletAdapter.publicKey);
  },
  async signMessage(message) {
    if (walletAdapter.signMessage === undefined) {
      throw new errors.OperationNotSupportedByWalletAdapterError('signMessage');
    }
    return walletAdapter.signMessage(message);
  },
  async signTransaction(transaction) {
    if (walletAdapter.signTransaction === undefined) {
      throw new errors.OperationNotSupportedByWalletAdapterError('signTransaction');
    }
    return umiWeb3jsAdapters.fromWeb3JsTransaction(await walletAdapter.signTransaction(umiWeb3jsAdapters.toWeb3JsTransaction(transaction)));
  },
  async signAllTransactions(transactions) {
    if (walletAdapter.signAllTransactions === undefined) {
      throw new errors.OperationNotSupportedByWalletAdapterError('signAllTransactions');
    }
    const web3JsTransactions = transactions.map(umiWeb3jsAdapters.toWeb3JsTransaction);
    const signedTransactions = await walletAdapter.signAllTransactions(web3JsTransactions);
    return signedTransactions.map(umiWeb3jsAdapters.fromWeb3JsTransaction);
  }
});

exports.createSignerFromWalletAdapter = createSignerFromWalletAdapter;
//# sourceMappingURL=createSignerFromWalletAdapter.cjs.map
