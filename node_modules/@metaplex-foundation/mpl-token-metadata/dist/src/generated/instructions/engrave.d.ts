/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type EngraveInstructionAccounts = {
    /** Metadata account */
    metadata?: PublicKey | Pda;
    /** Edition account */
    edition?: PublicKey | Pda;
    /** Mint of token asset */
    mint: PublicKey | Pda;
    /** Update authority of the metadata account */
    updateAuthority?: Signer;
    /** MPL Engraver program */
    engraverProgram: PublicKey | Pda;
    /** System program */
    systemProgram?: PublicKey | Pda;
    /** Instructions sysvar account */
    sysvarInstructions?: PublicKey | Pda;
};
export type EngraveInstructionData = {
    discriminator: number;
};
export type EngraveInstructionDataArgs = {};
export declare function getEngraveInstructionDataSerializer(): Serializer<EngraveInstructionDataArgs, EngraveInstructionData>;
export declare function engrave(context: Pick<Context, 'eddsa' | 'identity' | 'programs'>, input: EngraveInstructionAccounts): TransactionBuilder;
